plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'net.nemerosa.versioning' version '2.0.0'         //provide meta info about the git repo
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'com.sedmelluq.jdaction' version '1.0.2' //check for unused RestActions
    id "com.jfrog.bintray" version "1.7.3"
}

group = 'space.npstr'
version = '0.9.2-' + (System.getenv('TRAVIS') ? System.getenv('TRAVIS_BUILD_NUMBER') : 'SNAPSHOT')

mainClassName = "space.npstr.wolfia.Wolfia"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()                               // JDA, maybe others
    mavenCentral()                          // everything else
    mavenLocal()                            // local maven repo, mostly for testing stuff
    maven { url 'https://jitpack.io' }      //for getting builds from github
}

dependencies {
    //@formatter:off
    ext.jdaVersion                = '3.3.1_289'
    ext.logbackVersion            = '1.2.3'
    ext.sentryVersion             = '1.5.4'
    ext.discordAppenderVersion    = '1.0.0'
    ext.yamlVersion               = '1.18'
    ext.okhttpVersion             = '3.9.0'
    ext.sqlsauceVersion           = 'ad411083589620ce96e56160285fae18be8976ee'
    ext.sparkVersion              = '2.6.0'
    ext.sparkThymeVersion         = '2.5.5'
    ext.thymeleafVersion          = '3.0.7.RELEASE'

    compile group: 'net.dv8tion',    name: 'JDA',                      version: ext.jdaVersion             //discord API
    compile group: 'ch.qos.logback', name: 'logback-classic',          version: ext.logbackVersion         //logging framework
    compile group: 'space.npstr',    name: 'logback-discord-appender', version: ext.discordAppenderVersion //log to discord todo deprecate in favor of sentry
    compile group: 'io.sentry',      name: 'sentry-logback',           version: ext.sentryVersion          //error aggregation
    compile group: 'org.yaml',       name: 'snakeyaml',                version: ext.yamlVersion            //parse yaml files
    compile group: 'com.squareup.okhttp3', name: 'okhttp',             version: ext.okhttpVersion          //http client
    compile group: 'space.npstr',    name: 'sqlsauce',                 version: ext.sqlsauceVersion        //db stack

    //charts stuff
    compile group: 'com.sparkjava',  name: 'spark-core',               version: ext.sparkVersion
    compile group: 'com.sparkjava',  name: 'spark-template-thymeleaf', version: ext.sparkThymeVersion
    compile group: 'org.thymeleaf',  name: 'thymeleaf',                version: ext.thymeleafVersion
    //@formatter:on
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

processResources {
    filesMatching('**/app.properties') {
        filter {
            //noinspection GroovyAssignabilityCheck
            it.replace('%APP_VERSION_TOKEN%', version)
        }
    }
}

compileJava.dependsOn 'clean', 'versionFile'
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

versionFile {
    // Path to the file to be written
    file = new File("src/main/resources", 'version.properties')
    // Prefix to apply to the properties
    prefix = 'GIT_'
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    filesSpec {
        from 'build/libs'
        into '.'
    }
    dryRun = false
    publish = true
    pkg {
        repo = 'wolfia'
        name = 'alpha'
        userOrg = user
        version {
            name = project.version
        }
    }
}
