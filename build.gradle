plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'com.sedmelluq.jdaction' version '1.0.2' //check for unused RestActions
    id "com.jfrog.bintray" version "1.7.3"
}

group = 'space.npstr'
version = '0.8.0_' + (System.getenv('TRAVIS') ? System.getenv('TRAVIS_BUILD_NUMBER') : 'SNAPSHOT')

mainClassName = "space.npstr.wolfia.Wolfia"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()                               // JDA, maybe others
    mavenCentral()                          // everything else
    mavenLocal()                            // local maven repo, mostly for testing stuff
    maven { url 'https://jitpack.io' }      //for getting builds from github
}

dependencies {
    //testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'net.dv8tion:JDA:3.2.0_228'                                             //discord API
    compile 'org.slf4j:slf4j-api:1.7.25'                                            //logging framework
    compile 'ch.qos.logback:logback-classic:1.2.3'                                  //logging framework
    compile 'org.yaml:snakeyaml:1.18'                                               //parse yaml files
    compile 'com.github.napstr:logback-discord-appender:0.0.2'      //log errors to a discord channel through a webhook
    compile 'com.squareup.okhttp3:okhttp:3.8.1'                                     //http client

    //database stuff
    compile 'org.postgresql:postgresql:42.1.3'                                      //postgres jdbc driver
    compile 'org.hibernate:hibernate-core:5.2.10.Final'                             //hibernate + JPA
    compile 'com.zaxxer:HikariCP:2.6.3'                                             //connection pool

    //charts stuff
    compile 'com.sparkjava:spark-core:2.6.0'
    compile 'com.sparkjava:spark-template-thymeleaf:2.5.5'
    compile 'org.thymeleaf:thymeleaf:3.0.6.RELEASE'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

processResources {
    filesMatching('**/app.properties') {
        filter {
            it.replace('%APP_VERSION_TOKEN%', version)
        }
    }
}

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    filesSpec {
        from 'build/libs'
        into '.'
    }
    dryRun = false
    publish = true
    pkg {
        repo = 'wolfia'
        name = 'alpha'
        userOrg = user
        version {
            name = project.version
        }
    }
}
