/*
 * Copyright (C) 2017 Dennis Neufeld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package space.npstr.wolfia.db.entity.stats;

import javax.persistence.*;
import java.io.Serializable;

/**
 * Created by napster on 30.05.17.
 * <p>
 * Describe a participant of a game
 */
@Entity
@Table(name = "stats_player")
public class Player implements Serializable {

    private static final long serialVersionUID = -4581124627322215168L;

    //dont really care about this one, its for the database
    @Id
    @Column(name = "player_id")
    @GeneratedValue
    private String id;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "team_id")
    @Column(name = "team")
    private Team team;

    @Column(name = "user_id")
    private long userId;

    //nickname on the guild where the main channel of the game is
    @Column(name = "nickname")
    private long nickname;

    //defined in the Roles enum
    @Column(name = "role")
    private String role;

    @Column(name = "total_posts")
    private int totalPosts;

    //do not use the autogenerated id, it will only be set after persisting
    @Override
    public int hashCode() {
        final int prime = 31;
        //todo test if referencing team here produces any kind of errors, since it's marked as lazy loading
        int result = this.team.hashCode();
        result = prime * result + (int) (this.userId ^ (this.userId >>> 32));
        return result;
    }

    //do not compare the autogenerated id, it will only be set after persisting
    @Override
    public boolean equals(final Object obj) {
        if (!(obj instanceof Player)) {
            return false;
        }
        final Player p = (Player) obj;
        //todo test if referencing team here produces any kind of errors, since it's marked as lazy loading
        return this.userId == p.userId && this.team.equals(p.team);
    }

    //########## boilerplate code below

    Player() {
    }

    public String getId() {
        return this.id;
    }

    public void setId(final String id) {
        this.id = id;
    }

    public Team getTeam() {
        return this.team;
    }

    public void setTeam(final Team team) {
        this.team = team;
    }

    public long getUserId() {
        return this.userId;
    }

    public void setUserId(final long userId) {
        this.userId = userId;
    }

    public long getNickname() {
        return this.nickname;
    }

    public void setNickname(final long nickname) {
        this.nickname = nickname;
    }

    public String getRole() {
        return this.role;
    }

    public void setRole(final String role) {
        this.role = role;
    }

    public int getTotalPosts() {
        return this.totalPosts;
    }

    public void setTotalPosts(final int totalPosts) {
        this.totalPosts = totalPosts;
    }
}
