/*
 * Copyright (C) 2017 Dennis Neufeld
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package space.npstr.wolfia.db.entities.stats;

import net.dv8tion.jda.core.entities.Message;
import space.npstr.sqlsauce.entities.SaucedEntity;

import javax.annotation.Nonnull;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import java.util.Objects;

/**
 * Created by napster on 03.07.17.
 * <p>
 * Tracks all our sent messages!
 */
@Entity
@Table(name = "stats_message_output")
public class MessageOutputStats extends SaucedEntity<Long, MessageOutputStats> {

    private static final long serialVersionUID = -2552612716286183939L;
    //generated by discord as a snowflake
    @Id
    @Column(name = "message_id")
    private long messageId;

    @Column(name = "channel_id")
    private long channelId;

    @Column(name = "is_private")
    private boolean isPrivate;

    @Column(name = "guild_id")
    private long guildId;

    @Column(name = "raw_message", length = 2000, columnDefinition = "text")
    private String rawMessage;

    @Column(name = "length")
    private int length;

    @Column(name = "is_embed")
    private boolean isEmbed;

    @Column(name = "time_stamp")
    private long timeStamp;


    public MessageOutputStats() {

    }

    public MessageOutputStats(final Message message) {
        this.messageId = message.getIdLong();
        this.channelId = message.getChannel().getIdLong();
        switch (message.getChannelType()) {
            case TEXT: //Guild
                this.isPrivate = false;
                this.guildId = message.getGuild().getIdLong();
                break;
            case PRIVATE:
                this.isPrivate = true;
                this.guildId = -1;
                break;
            default:
                throw new IllegalArgumentException("Unexpected channel type of message " + message.getIdLong());
        }
        this.rawMessage = message.getContentRaw();
        this.length = this.rawMessage.length();
        this.isEmbed = !message.getEmbeds().isEmpty();
        this.timeStamp = message.getCreationTime().toInstant().toEpochMilli();
    }

    @Override
    public boolean equals(final Object obj) {
        if (!(obj instanceof MessageOutputStats)) {
            return false;
        }
        final MessageOutputStats mos = (MessageOutputStats) obj;
        return this.messageId == mos.messageId;
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.messageId);
    }

    @Nonnull
    @Override
    public Long getId() {
        return this.messageId;
    }

    @Nonnull
    @Override
    public MessageOutputStats setId(final Long messageId) {
        this.messageId = messageId;
        return this;
    }

    public long getChannelId() {
        return this.channelId;
    }

    public void setChannelId(final long channelId) {
        this.channelId = channelId;
    }

    public boolean isPrivate() {
        return this.isPrivate;
    }

    public void setPrivate(final boolean aPrivate) {
        this.isPrivate = aPrivate;
    }


    public long getGuildId() {
        return this.guildId;
    }

    public void setGuildId(final long guildId) {
        this.guildId = guildId;
    }

    public String getRawMessage() {
        return this.rawMessage;
    }

    public void setRawMessage(final String rawMessage) {
        this.rawMessage = rawMessage;
    }

    public int getLength() {
        return this.length;
    }

    public void setLength(final int length) {
        this.length = length;
    }

    public boolean isEmbed() {
        return this.isEmbed;
    }

    public void setEmbed(final boolean embed) {
        this.isEmbed = embed;
    }

    public long getTimeStamp() {
        return this.timeStamp;
    }

    public void setTimeStamp(final long timeStamp) {
        this.timeStamp = timeStamp;
    }
}
